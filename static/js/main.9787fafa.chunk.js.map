{"version":3,"sources":["components/QuoteBox/QuoteBox.module.css","components/TweetButton/TweetButton.module.css","components/NewQuoteButton/NewQuoteButton.module.css","components/TweetButton/index.js","components/NewQuoteButton/index.js","helpers.js","components/QuoteBox/index.js","App.js","index.js"],"names":["module","exports","TweetButton","quote","author","color","href","encodeURIComponent","id","className","s","button","target","rel","style","backgroundColor","title","NewQuoteButton","updateQuote","type","onClick","randomItem","list","Math","floor","random","length","QuoteBox","themeColor","updateTheme","useState","quotes","setQuotes","selectedQuote","setSelectedQuote","useEffect","fetch","then","response","json","data","Object","keys","wrapper","content","buttons","attribution","loadWrap","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6GACAA,EAAOC,QAAU,CAAC,QAAU,0BAA0B,QAAU,0BAA0B,MAAQ,wBAAwB,OAAS,yBAAyB,QAAU,0BAA0B,YAAc,8BAA8B,SAAW,6B,oBCAvPD,EAAOC,QAAU,CAAC,OAAS,8B,gBCA3BD,EAAOC,QAAU,CAAC,OAAS,iC,oJC2BZC,EApBK,SAAC,GAA8B,IAA5BC,EAA2B,EAA3BA,MAAOC,EAAoB,EAApBA,OAAQC,EAAY,EAAZA,MACpC,OACE,mBACEC,KACE,yDACAC,mBAAmB,IAAD,OAAKJ,EAAL,eAAiBC,IAErCI,GAAG,cACHC,UAAWC,IAAEC,OACbC,OAAO,SACPC,IAAI,aACJ,aAAW,mBACXC,MAAO,CAAEC,gBAAiBV,GAC1BW,MAAM,mBAXR,SAaE,cAAC,IAAD,O,gBCLSC,EAdQ,SAAC,GAA4B,IAA1BC,EAAyB,EAAzBA,YAAab,EAAY,EAAZA,MACrC,OACE,wBACEc,KAAK,SACLC,QAASF,EACTT,UAAWC,IAAEC,OACbH,GAAG,YACHM,MAAO,CAAEC,gBAAiBV,GAL5B,wBCFSgB,EAAa,SAACC,GAEzB,OAAOA,EADaC,KAAKC,MAAMD,KAAKE,SAAWH,EAAKI,UC0EvCC,EA1DE,SAAC,GAAgC,EAA9BC,WAA8B,EAAlBC,YAAmB,IACjD,EAA4BC,mBAAS,IAArC,mBAAOC,EAAP,KAAeC,EAAf,KACA,EAA0CF,mBAAS,IAAnD,mBAAOG,EAAP,KAAsBC,EAAtB,KAkBA,GAZAC,qBAAU,WACRC,MAdF,0IAeKC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GACLR,EAAUQ,EAAKT,aAElB,IAEHI,qBAAU,WACRD,EAAiBb,EAAWU,MAC3B,CAACA,IAEAE,GAAiBQ,OAAOC,KAAKT,GAAeP,OAAQ,CACtD,IAAMvB,EAAQ8B,EAAc9B,MACtBC,EAAS6B,EAAc7B,OAC7B,OACE,sBAAKK,UAAWC,IAAEiC,QAAlB,UACE,uBAAMlC,UAAWC,IAAEkC,QAASpC,GAAG,YAA/B,UACE,oBAAGC,UAAWC,IAAEP,MAAOK,GAAG,OAA1B,UACE,cAAC,IAAD,IADF,IACmBL,KAEnB,oBAAGM,UAAWC,IAAEN,OAAQI,GAAG,SAA3B,eACKJ,KAEL,sBAAKK,UAAWC,IAAEmC,QAAlB,UACE,cAAC,EAAD,CAAa1C,MAAOA,EAAOC,OAAQA,IACnC,cAAC,EAAD,CAAgBc,YA9BN,WAClBgB,EAAiBb,EAAWU,aAgCxB,oBAAGtB,UAAWC,IAAEoC,YAAhB,oBACU,IACR,mBACExC,KAAK,+BACLM,OAAO,SACPC,IAAI,aAHN,8BAWN,OACE,qBAAKJ,UAAWC,IAAEqC,SAAlB,SACE,+CClEOC,EAJH,WACV,OAAO,cAAC,EAAD,K,MCCTC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.9787fafa.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"QuoteBox_wrapper__3Rojj\",\"content\":\"QuoteBox_content__3jBhz\",\"quote\":\"QuoteBox_quote__15Fao\",\"author\":\"QuoteBox_author__37ZZ-\",\"buttons\":\"QuoteBox_buttons__2Xj4d\",\"attribution\":\"QuoteBox_attribution__3Tnjz\",\"loadWrap\":\"QuoteBox_loadWrap__2CSMy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"TweetButton_button__2Bc5C\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"NewQuoteButton_button__3ODW6\"};","import React from 'react';\r\n\r\n// icon\r\nimport { FaTwitter } from 'react-icons/fa';\r\n\r\n// styles\r\nimport s from './TweetButton.module.css';\r\n\r\nconst TweetButton = ({ quote, author, color }) => {\r\n  return (\r\n    <a\r\n      href={\r\n        `https://twitter.com/intent/tweet?hashtags=quotes&text=` +\r\n        encodeURIComponent(`\"${quote}\" - ${author}`)\r\n      }\r\n      id=\"tweet-quote\"\r\n      className={s.button}\r\n      target=\"_blank\"\r\n      rel=\"noreferrer\"\r\n      aria-label=\"Tweet this quote\"\r\n      style={{ backgroundColor: color }}\r\n      title=\"Tweet this quote\"\r\n    >\r\n      <FaTwitter />\r\n    </a>\r\n  );\r\n};\r\n\r\nexport default TweetButton;\r\n","import React from 'react';\r\n\r\nimport s from './NewQuoteButton.module.css';\r\n\r\nconst NewQuoteButton = ({ updateQuote, color }) => {\r\n  return (\r\n    <button\r\n      type=\"button\"\r\n      onClick={updateQuote}\r\n      className={s.button}\r\n      id=\"new-quote\"\r\n      style={{ backgroundColor: color }}\r\n    >\r\n      New Quote\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default NewQuoteButton;\r\n","export const randomNum = (min, max) => {\r\n  return Math.floor(Math.random() * (max - min + 1) + min);\r\n};\r\n\r\nexport const randomItem = (list) => {\r\n  const randomIndex = Math.floor(Math.random() * list.length);\r\n  return list[randomIndex];\r\n};\r\n","import React, { useState, useEffect } from 'react';\r\n\r\n// styles\r\nimport s from './QuoteBox.module.css';\r\n\r\n// Components\r\nimport TweetButton from '../TweetButton';\r\nimport NewQuoteButton from '../NewQuoteButton';\r\n\r\n// icons\r\nimport { FaQuoteLeft } from 'react-icons/fa';\r\n\r\n// helpers\r\nimport { randomItem } from '../../helpers';\r\n\r\nconst endpoint =\r\n  'https://gist.githubusercontent.com/jonrutter/400699473fcb2e61ae4584564cf76c4d/raw/72cfe8b4b1b95b4b9c464cdcdd29fdd5f2e7004b/quotes.json';\r\n\r\n// Keeping the list of quotes as a regular variable instead of state, because the quotes will not be changed over the life of the program\r\n// let quotes;\r\n\r\nconst QuoteBox = ({ themeColor, updateTheme }) => {\r\n  const [quotes, setQuotes] = useState([]);\r\n  const [selectedQuote, setSelectedQuote] = useState({});\r\n\r\n  const updateQuote = () => {\r\n    setSelectedQuote(randomItem(quotes));\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetch(endpoint)\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        setQuotes(data.quotes);\r\n      });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    setSelectedQuote(randomItem(quotes));\r\n  }, [quotes]);\r\n\r\n  if (selectedQuote && Object.keys(selectedQuote).length) {\r\n    const quote = selectedQuote.quote;\r\n    const author = selectedQuote.author;\r\n    return (\r\n      <div className={s.wrapper}>\r\n        <main className={s.content} id=\"quote-box\">\r\n          <p className={s.quote} id=\"text\">\r\n            <FaQuoteLeft /> {quote}\r\n          </p>\r\n          <p className={s.author} id=\"author\">\r\n            --{author}\r\n          </p>\r\n          <div className={s.buttons}>\r\n            <TweetButton quote={quote} author={author} />\r\n            <NewQuoteButton updateQuote={updateQuote} />\r\n          </div>\r\n        </main>\r\n        <p className={s.attribution}>\r\n          Made by{' '}\r\n          <a\r\n            href=\"https://github.com/jonrutter\"\r\n            target=\"_blank\"\r\n            rel=\"noreferrer\"\r\n          >\r\n            Jon Rutter\r\n          </a>\r\n        </p>\r\n      </div>\r\n    );\r\n  } else {\r\n    return (\r\n      <div className={s.loadWrap}>\r\n        <h1>Loading...</h1>\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nexport default QuoteBox;\r\n","import React from 'react';\r\nimport QuoteBox from './components/QuoteBox';\r\n\r\nconst App = () => {\r\n  return <QuoteBox />;\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport './index.css';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}